plugins {
	id 'buildlogic.java-application-conventions'
	id 'org.springframework.boot' version '3.2.3'
}

apply plugin: 'io.spring.dependency-management'

group = 'ru.hse.lmsteam'
version = '0.0.1-SNAPSHOT'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation project(':schema-registry')

	implementation 'io.netty:netty-resolver-dns-native-macos'
	implementation 'org.eclipse.angus:angus-mail:2.0.3'

	implementation 'com.google.guava:guava:33.0.0-jre'
	implementation 'com.google.protobuf:protobuf-java-util:3.25.3'

	// TODO remove if not used in future
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.12.5'
	// mapstruct in test code
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

//    to enable json / protobuf conversion
	developmentOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'com.hubspot.jackson:jackson-datatype-protobuf:0.9.14'

//    to enable webflux (doesnt working right now) + extract validation jakarta api
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:r2dbc'
}
